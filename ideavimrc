let mapleader = " "
set ignorecase
set smartcase
set scrolloff=3         " 3 lines above/below cursor when scrolling
set ideajoin
set virtualedit=onemore
set relativenumber
set number

" Plugins
set NERDTree
set commentary
set surround
set ReplaceWithRegister
set argtextobj
set exchange
set highlightedyank
set sneak
set easymotion
set multiple-cursors
set vim-paragraph-motion
set which-key
set timeoutlen=5000

let g:highlightedyank_highlight_duration = "450"

" Integrate with system clipboard
set clipboard=unnamedplus,unnamed

" Use Q for formatting the current paragraph (or visual selection)
vmap Q gq
nmap Q gqap

" These create newlines like o and O but stay in normal mode
nmap <leader>o o<Esc>k
nmap <leader>O O<Esc>j

" NERDTree
nmap <leader>op :NERDTree<cr>

" Binding for split stretch
nmap <c-w>+ <Action>(StretchSplitToBottom)
nmap <c-w>- <Action>(StretchSplitToTop)
nmap <c-w>< <Action>(StretchSplitToLeft)
nmap <c-w>> <Action>(StretchSplitToRight)
nmap <leader>+ <Action>(StretchSplitToBottom)
nmap <leader>- <Action>(StretchSplitToTop)
nmap <leader>< <Action>(StretchSplitToLeft)
nmap <leader>> <Action>(StretchSplitToRight)

" Splits manipulation
nmap <c-w>J <Action>(MoveTabDown)
nmap <c-w>L <Action>(MoveTabRight)
nmap <c-w>K <Action>(MoveEditorToOppositeTabGroup)
nmap <c-w>H <Action>(Unsplit)
nmap <c-w>Ha <Action>(UnsplitAll)
nmap <leader>J <Action>(MoveTabDown)
nmap <leader>L <Action>(MoveTabRight)
nmap <leader>K <Action>(MoveEditorToOppositeTabGroup)
nmap <leader>H <Action>(Unsplit)
nmap <leader>Ha <Action>(UnsplitAll)

" Save mapping
nmap <leader>fs <Action>(SaveAll)

" unimpaired mappings - from https://github.com/saaguero/ideavimrc/blob/master/.ideavimrc
nnoremap [<space> O<esc>j
nnoremap ]<space> o<esc>k
nnoremap [q <Action>(PreviousOccurence)
nnoremap ]q <Action>(NextOccurence)
nnoremap [m <Action>(MethodUp)
nnoremap ]m <Action>(MethodDown)
nnoremap [c <Action>(VcsShowPrevChangeMarker)
nnoremap ]c <Action>(VcsShowNextChangeMarker)

" Moving lines
nmap [e <Action>(MoveLineUp)
nmap ]e <Action>(MoveLineDown)

" Moving statements
nmap [s <Action>(MoveStatementUp)
nmap ]s <Action>(MoveStatementDown)

" Building, Running and Debugging
nmap ,c <Action>(CompileDirty)
nmap ,r <Action>(Run)
nmap ,R <Action>(RunAnything)
nmap ,b <Action>(Debug)
nmap ,c <Action>(RunClass)
nmap ,d <Action>(DebugClass)
nmap ,t <Action>(RerunTests)
nmap ,T <Action>(RerunFailedTests)

" Tabs
nmap <C-j> <Action>(PreviousTab)
nmap <C-k> <Action>(NextTab)

" Closing tabs
nmap <leader>qc <Action>(CloseContent)
nmap <leader>qr <Action>(ReopenClosedTab)

nmap <leader>g <Action>(GotoDeclaration)
nmap <c-w>b <Action>(Back)
nmap <c-w>f <Action>(Forward)

nmap <leader>fu <Action>(FindUsages)
nmap <leader>ft <Action>(GotoFile)
nmap <leader>fc <Action>(GotoClass)
nmap <leader>cs <Action>(GotoSymbol)
nmap <leader>fr <Action>(FileStructurePopup)
nmap <leader>cd <Action>(ShowErrorDescription)
nmap <leader>cR <Action>(RecentLocations)
nmap == <Action>(ReformatCode)

" Won't work in visual mode (with vmap) for some reason.
" Use default map of <c-/> for that.
vmap gC <Action>(CommentByBlockComment)

" Remap sneak -> surround
vmap S <Plug>VSurround
