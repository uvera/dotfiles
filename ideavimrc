set ignorecase
set smartcase
set scrolloff=3         " 3 lines above/below cursor when scrolling
set ideajoin
set virtualedit=onemore

set commentary
set surround
set ReplaceWithRegister
set argtextobj
set exchange
set highlightedyank
set sneak

let g:highlightedyank_highlight_duration = "450"

" Integrate with system clipboard
set clipboard=unnamedplus,unnamed

let mapleader = " "

" Use Q for formatting the current paragraph (or visual selection)
vmap Q gq
nmap Q gqap

" These create newlines like o and O but stay in normal mode
nmap <leader>o o<Esc>k
nmap <leader>O O<Esc>j

" key bindings for quickly moving between windows
" h left, l right, k up, j down
nmap <leader>h <c-w>h
nmap <leader>l <c-w>l
nmap <leader>k <c-w>k
nmap <leader>j <c-w>j
nmap <leader>e <c-w>w

" Binding for split stretch
nmap <c-s>j <Action>(StretchSplitToBottom)
nmap <c-s>k <Action>(StretchSplitToTop)
nmap <c-s>h <Action>(StretchSplitToLeft)
nmap <c-s>l <Action>(StretchSplitToRight)

" Splits manipulation
nmap <leader>wh <Action>(MoveTabDown)
nmap <leader>wv <Action>(MoveTabRight)
nmap <leader>wj <Action>(MoveEditorToOppositeTabGroup)
nmap <leader>wc <Action>(Unsplit)
nmap <leader>wC <Action>(UnsplitAll)

" unimpaired mappings - from https://github.com/saaguero/ideavimrc/blob/master/.ideavimrc
nnoremap [<space> O<esc>j
nnoremap ]<space> o<esc>k
nnoremap [q <Action>(PreviousOccurence)
nnoremap ]q <Action>(NextOccurence)
nnoremap [m <Action>(MethodUp)
nnoremap ]m <Action>(MethodDown)
nnoremap [c <Action>(VcsShowPrevChangeMarker)
nnoremap ]c <Action>(VcsShowNextChangeMarker)

" Moving lines
nmap [e <Action>(MoveLineUp)
nmap ]e <Action>(MoveLineDown)

" Moving statements
nmap [s <Action>(MoveStatementUp)
nmap ]s <Action>(MoveStatementDown)

" Building, Running and Debugging
nmap ,c <Action>(CompileDirty)
nmap ,r <Action>(Run)
nmap ,R <Action>(RunAnything)
nmap ,b <Action>(Debug)
nmap ,c <Action>(RunClass)
nmap ,d <Action>(DebugClass)
nmap ,t <Action>(RerunTests)
nmap ,T <Action>(RerunFailedTests)

" Tabs
nmap <C-j> <Action>(PreviousTab)
nmap <C-k> <Action>(NextTab)

" Closing tabs
nmap <leader>q <Action>(CloseContent)
nmap <leader>Q <Action>(ReopenClosedTab)

nmap <leader>g <Action>(GotoDeclaration)
nmap <leader>b <Action>(Back)
nmap <leader>f <Action>(Forward)

nmap <leader>u <Action>(FindUsages)
nmap <leader>t <Action>(GotoFile)
nmap <leader>c <Action>(GotoClass)
nmap <leader>ns <Action>(GotoSymbol)
nmap <leader>r <Action>(FileStructurePopup)
nmap <leader>d <Action>(ShowErrorDescription)
nmap <leader>R <Action>(RecentLocations)
nmap == <Action>(ReformatCode)

" Switches between .cc and .h file!
nmap <leader>s <Action>(GotoRelated)

" IdeaVim uses 'a' for alt instead of Vim's 'm'
nmap <a-j> 15gj
nmap <a-k> 15gk

" Won't work in visual mode (with vmap) for some reason.
" Use default map of <c-/> for that.
vmap gC <Action>(CommentByBlockComment)

" Thymeleaf expressions
nmap <C-e>v a${}<esc>h
nmap <C-e>s a*{}<esc>h
nmap <C-e>m a#{}<esc>h
nmap <C-e>l a@{}<esc>h
nmap <C-e>f a~{}<esc>h

imap <C-e>v ${}<esc>i
imap <C-e>s *{}<esc>i
imap <C-e>m #{}<esc>i
imap <C-e>l @{}<esc>i
imap <C-e>f ~{}<esc>i
